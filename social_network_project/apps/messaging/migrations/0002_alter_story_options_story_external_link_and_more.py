# Generated by Django 4.2.9 on 2025-08-28 17:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0002_jobcategory_joblisting_jobapplication'),
        ('messaging', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='story',
            options={'ordering': ['-is_highlighted', '-created_at'], 'verbose_name_plural': 'Stories'},
        ),
        migrations.AddField(
            model_name='story',
            name='external_link',
            field=models.URLField(blank=True, help_text='Link externo relacionado', null=True),
        ),
        migrations.AddField(
            model_name='story',
            name='is_highlighted',
            field=models.BooleanField(default=False, help_text='Story destacado (fica no topo)'),
        ),
        migrations.AddField(
            model_name='story',
            name='related_job',
            field=models.ForeignKey(blank=True, help_text='Vaga relacionada ao story', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.joblisting'),
        ),
        migrations.AlterField(
            model_name='story',
            name='content',
            field=models.TextField(help_text='Conteúdo principal do story'),
        ),
        migrations.AlterField(
            model_name='story',
            name='expires_at',
            field=models.DateTimeField(help_text='Quando o story expira'),
        ),
        migrations.AlterField(
            model_name='story',
            name='image',
            field=models.ImageField(blank=True, help_text='Imagem do story', null=True, upload_to='stories/'),
        ),
        migrations.AlterField(
            model_name='story',
            name='story_type',
            field=models.CharField(choices=[('job', 'Nova Vaga'), ('project', 'Novo Projeto'), ('company_update', 'Atualização da Empresa'), ('announcement', 'Anúncio'), ('achievement', 'Conquista'), ('event', 'Evento'), ('culture', 'Cultura da Empresa')], default='announcement', max_length=20),
        ),
        migrations.AlterField(
            model_name='story',
            name='title',
            field=models.CharField(help_text='Título do story', max_length=100),
        ),
        migrations.CreateModel(
            name='StudyGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nome do grupo', max_length=100)),
                ('description', models.TextField(help_text='Descrição do grupo')),
                ('subject', models.CharField(help_text='Matéria/Assunto principal', max_length=100)),
                ('max_members', models.PositiveIntegerField(default=10, help_text='Máximo de membros')),
                ('meeting_type', models.CharField(choices=[('online', 'Online'), ('presential', 'Presencial'), ('hybrid', 'Híbrido')], default='online', max_length=20)),
                ('university', models.CharField(blank=True, help_text='Universidade (opcional)', max_length=200)),
                ('semester', models.CharField(blank=True, help_text='Semestre (opcional)', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_study_groups', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(blank=True, related_name='study_groups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Título do post', max_length=200)),
                ('content', models.TextField(help_text='Conteúdo do post')),
                ('image', models.ImageField(blank=True, null=True, upload_to='student_posts/')),
                ('post_type', models.CharField(choices=[('help', 'Pedido de Ajuda'), ('share', 'Compartilhamento'), ('project', 'Projeto Pessoal'), ('achievement', 'Conquista'), ('study_group', 'Grupo de Estudos'), ('networking', 'Networking'), ('discussion', 'Discussão')], default='discussion', max_length=20)),
                ('tags', models.CharField(blank=True, help_text='Tags separadas por vírgula', max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('study_subject', models.CharField(blank=True, help_text='Matéria de estudo', max_length=100)),
                ('max_participants', models.PositiveIntegerField(blank=True, help_text='Máximo de participantes', null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PostComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='Conteúdo do comentário')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='messaging.studentpost')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('accepted', 'Aceito'), ('rejected', 'Rejeitado'), ('blocked', 'Bloqueado')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('from_student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_connections', to=settings.AUTH_USER_MODEL)),
                ('to_student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_connections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('from_student', 'to_student')},
            },
        ),
        migrations.CreateModel(
            name='PostLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='messaging.studentpost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('post', 'user')},
            },
        ),
    ]
