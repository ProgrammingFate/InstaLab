# Generated by Django 4.2.9 on 2025-10-15 15:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0002_jobcategory_joblisting_jobapplication'),
    ]

    operations = [
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='stories/')),
                ('video', models.FileField(blank=True, null=True, upload_to='stories/videos/')),
                ('text_content', models.TextField(blank=True)),
                ('background_color', models.CharField(default='#000000', max_length=7)),
                ('text_color', models.CharField(default='#FFFFFF', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('external_link', models.URLField(blank=True, null=True)),
                ('link_text', models.CharField(blank=True, max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feed_stories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Stories',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='jobcategory',
            options={'ordering': ['name'], 'verbose_name_plural': 'Job Categories'},
        ),
        migrations.AlterModelOptions(
            name='post',
            options={'ordering': ['-created_at']},
        ),
        migrations.RenameField(
            model_name='jobapplication',
            old_name='internal_notes',
            new_name='company_notes',
        ),
        migrations.RenameField(
            model_name='joblisting',
            old_name='responsibilities',
            new_name='benefits',
        ),
        migrations.RemoveField(
            model_name='joblisting',
            name='deadline',
        ),
        migrations.RemoveField(
            model_name='joblisting',
            name='priority',
        ),
        migrations.RemoveField(
            model_name='joblisting',
            name='remote_work',
        ),
        migrations.RemoveField(
            model_name='joblisting',
            name='salary_max',
        ),
        migrations.RemoveField(
            model_name='joblisting',
            name='salary_min',
        ),
        migrations.RemoveField(
            model_name='joblisting',
            name='spots_available',
        ),
        migrations.AddField(
            model_name='jobcategory',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='joblisting',
            name='experience_level',
            field=models.CharField(choices=[('entry', 'Iniciante'), ('junior', 'Júnior'), ('mid', 'Pleno'), ('senior', 'Sênior')], default='entry', max_length=20),
        ),
        migrations.AddField(
            model_name='joblisting',
            name='job_type',
            field=models.CharField(choices=[('internship', 'Estágio'), ('part_time', 'Meio período'), ('full_time', 'Tempo integral'), ('contract', 'Contrato'), ('freelance', 'Freelance')], default='full_time', max_length=20),
        ),
        migrations.AddField(
            model_name='joblisting',
            name='salary_range',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='post',
            name='hashtags',
            field=models.TextField(blank=True, help_text='Hashtags separadas por vírgula'),
        ),
        migrations.AddField(
            model_name='post',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='posts/'),
        ),
        migrations.AddField(
            model_name='post',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='post',
            name='location',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='post',
            name='post_type',
            field=models.CharField(choices=[('photo', 'Foto'), ('video', 'Vídeo'), ('text', 'Texto'), ('job', 'Vaga'), ('project', 'Projeto')], default='photo', max_length=20),
        ),
        migrations.AddField(
            model_name='post',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='post',
            name='video',
            field=models.FileField(blank=True, null=True, upload_to='posts/videos/'),
        ),
        migrations.AlterField(
            model_name='jobapplication',
            name='applicant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='jobapplication',
            name='cover_letter',
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name='jobapplication',
            name='status',
            field=models.CharField(choices=[('pending', 'Pendente'), ('reviewing', 'Em análise'), ('interview', 'Entrevista'), ('approved', 'Aprovado'), ('rejected', 'Rejeitado')], default='pending', max_length=20),
        ),
        migrations.AlterField(
            model_name='jobcategory',
            name='icon',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AlterField(
            model_name='jobcategory',
            name='name',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='joblisting',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.jobcategory'),
        ),
        migrations.AlterField(
            model_name='joblisting',
            name='location',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='joblisting',
            name='requirements',
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name='joblisting',
            name='status',
            field=models.CharField(choices=[('active', 'Ativo'), ('paused', 'Pausado'), ('closed', 'Fechado')], default='active', max_length=20),
        ),
        migrations.AlterField(
            model_name='joblisting',
            name='tags',
            field=models.CharField(blank=True, help_text='Tags separadas por vírgula', max_length=500),
        ),
        migrations.AlterField(
            model_name='post',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='post',
            name='content',
            field=models.TextField(blank=True),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='core.comment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='StoryView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='core.story')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feed_story_views', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('story', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='core.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'post')},
            },
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('follower', 'following')},
            },
        ),
    ]
